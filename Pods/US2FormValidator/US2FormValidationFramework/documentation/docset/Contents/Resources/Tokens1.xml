<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/US2Condition.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/US2Condition</TokenIdentifier>
			<Abstract type="html">A condition is the smallest sub element of the validation framework.
It tells how a string must be structured or wat is has to contain or not.
Validators (see US2Validator are storing those conditions and checking
for violations of every condition.
Conditions are recommended working with regular expressions but can also contain
their custom checking code for detecting violations in the string to check.</Abstract>
			<DeclaredIn>US2Condition.h</DeclaredIn>
			
			<NodeRef refid="1"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/US2Condition/setShouldAllowViolation:</TokenIdentifier>
			<Abstract type="html">If set to NO the user is not able to enter characters which would break the condition.</Abstract>
			<DeclaredIn>US2Condition.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL shouldAllowViolation</Declaration>
			
			
			<Anchor>//api/name/shouldAllowViolation</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/US2Condition/shouldAllowViolation</TokenIdentifier>
			<Abstract type="html">If set to NO the user is not able to enter characters which would break the condition.</Abstract>
			<DeclaredIn>US2Condition.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL shouldAllowViolation</Declaration>
			
			
			<Anchor>//api/name/shouldAllowViolation</Anchor>
		</Token>
		
	</File>
</Tokens>