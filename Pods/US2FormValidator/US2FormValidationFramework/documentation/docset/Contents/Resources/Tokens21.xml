<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/US2ValidatorTextField.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/US2ValidatorTextField</TokenIdentifier>
			<Abstract type="html">The validator text field is the central object to use. It inherits UITextField and listens internally
to all own changes. After every change it validates the changed text material. When a validator, which
was added to the validator text field, reports a violation the validatorTextFieldDelegate will be
served with this information. The validatorTextFieldDelegate is of type US2ValidatorTextFieldDelegate
and returns what went wrong and in which status the validation text field is at the moment.</Abstract>
			<DeclaredIn>US2ValidatorTextField.h</DeclaredIn>
			
			<NodeRef refid="21"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/US2ValidatorTextField/setValidatorUIDelegate:</TokenIdentifier>
			<Abstract type="html">Set delegate implementing US2ValidatorUIDelegate</Abstract>
			<DeclaredIn>US2ValidatorTextField.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) id&lt;US2ValidatorUIDelegate,UITextFieldDelegate&gt; validatorUIDelegate</Declaration>
			
			
			<Anchor>//api/name/validatorUIDelegate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/US2ValidatorTextField/validatorUIDelegate</TokenIdentifier>
			<Abstract type="html">Set delegate implementing US2ValidatorUIDelegate</Abstract>
			<DeclaredIn>US2ValidatorTextField.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) id&lt;US2ValidatorUIDelegate,UITextFieldDelegate&gt; validatorUIDelegate</Declaration>
			
			
			<Anchor>//api/name/validatorUIDelegate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/US2ValidatorTextField/setValidator:</TokenIdentifier>
			<Abstract type="html">Set the validator to check the text of the text field with</Abstract>
			<DeclaredIn>US2ValidatorTextField.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) US2Validator *validator</Declaration>
			
			
			<Anchor>//api/name/validator</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/US2ValidatorTextField/validator</TokenIdentifier>
			<Abstract type="html">Set the validator to check the text of the text field with</Abstract>
			<DeclaredIn>US2ValidatorTextField.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) US2Validator *validator</Declaration>
			
			
			<Anchor>//api/name/validator</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/US2ValidatorTextField/setShouldAllowViolations:</TokenIdentifier>
			<Abstract type="html">Determines whether text inputs can be made either by violating the conditions.
Is this parameter is NO it overrides the &apos;shouldAllowViolation&apos; parameter of
the conditions added to the validator. If set to YES the &apos;shouldAllowViolation&apos;
parameters of the conditions are considered.</Abstract>
			<DeclaredIn>US2ValidatorTextField.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL shouldAllowViolations</Declaration>
			
			
			<Anchor>//api/name/shouldAllowViolations</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/US2ValidatorTextField/shouldAllowViolations</TokenIdentifier>
			<Abstract type="html">Determines whether text inputs can be made either by violating the conditions.
Is this parameter is NO it overrides the &apos;shouldAllowViolation&apos; parameter of
the conditions added to the validator. If set to YES the &apos;shouldAllowViolation&apos;
parameters of the conditions are considered.</Abstract>
			<DeclaredIn>US2ValidatorTextField.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL shouldAllowViolations</Declaration>
			
			
			<Anchor>//api/name/shouldAllowViolations</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/US2ValidatorTextField/setIsValid:</TokenIdentifier>
			<Abstract type="html">Return whether the text is valid.</Abstract>
			<DeclaredIn>US2ValidatorTextField.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readonly) BOOL isValid</Declaration>
			
			<ReturnValue><Abstract type="html">Returns the valid state of the text field</Abstract></ReturnValue>
			<Anchor>//api/name/isValid</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/US2ValidatorTextField/isValid</TokenIdentifier>
			<Abstract type="html">Return whether the text is valid.</Abstract>
			<DeclaredIn>US2ValidatorTextField.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readonly) BOOL isValid</Declaration>
			
			<ReturnValue><Abstract type="html">Returns the valid state of the text field</Abstract></ReturnValue>
			<Anchor>//api/name/isValid</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/US2ValidatorTextField/setValidateOnFocusLossOnly:</TokenIdentifier>
			<Abstract type="html">Determines whether the text has to be validated after leaving the text field
or while editing. After a violation appeared after leaving the text field
the text field will from now on validate while editing. Because the user
knows now that a violation occurrs when using this text field.</Abstract>
			<DeclaredIn>US2ValidatorTextField.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL validateOnFocusLossOnly</Declaration>
			
			
			<Anchor>//api/name/validateOnFocusLossOnly</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/US2ValidatorTextField/validateOnFocusLossOnly</TokenIdentifier>
			<Abstract type="html">Determines whether the text has to be validated after leaving the text field
or while editing. After a violation appeared after leaving the text field
the text field will from now on validate while editing. Because the user
knows now that a violation occurrs when using this text field.</Abstract>
			<DeclaredIn>US2ValidatorTextField.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL validateOnFocusLossOnly</Declaration>
			
			
			<Anchor>//api/name/validateOnFocusLossOnly</Anchor>
		</Token>
		
	</File>
</Tokens>